<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	 
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<exclude-mapping path="/resources/**"/>
			<beans:bean id="baseHandlerInterceptor" class="com.gojls.manage.common.interceptor.BaseHandlerInterceptor" />
		</interceptor>
	</interceptors>
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	
	<mvc:interceptors>
		<beans:bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<beans:property name="cacheSeconds" value="0" />
			<beans:property name="useExpiresHeader" value="true" />
			<beans:property name="useCacheControlHeader" value="true" />
			<beans:property name="useCacheControlNoStore" value="true" />
		</beans:bean>
	</mvc:interceptors>
	
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/**" location="/" />
	
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>classpath:tiles/tiles-config.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory" />
	</beans:bean>

	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver"> 
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" /> 
		<beans:property name="order" value="1" />
	</beans:bean>

	<mvc:default-servlet-handler/>
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
		<beans:property name="contentType" value="text/html; charset=UTF-8"/>
	</beans:bean>
	
	<context:component-scan base-package="com.gojls.manage" />
	<context:annotation-config/>
	<tx:annotation-driven transaction-manager="txManager" />
	<task:annotation-driven executor="myExecutor" />
	<task:executor id="myExecutor" pool-size="5"/>
</beans:beans>
